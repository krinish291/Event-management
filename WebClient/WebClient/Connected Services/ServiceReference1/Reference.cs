//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/EventService")]
    [System.SerializableAttribute()]
    public partial class Event : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiscriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DuractionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Event_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Organizer_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Registration_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StrengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool is_groupField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactNo {
            get {
                return this.ContactNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNoField, value) != true)) {
                    this.ContactNoField = value;
                    this.RaisePropertyChanged("ContactNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Discription {
            get {
                return this.DiscriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DiscriptionField, value) != true)) {
                    this.DiscriptionField = value;
                    this.RaisePropertyChanged("Discription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Duraction {
            get {
                return this.DuractionField;
            }
            set {
                if ((this.DuractionField.Equals(value) != true)) {
                    this.DuractionField = value;
                    this.RaisePropertyChanged("Duraction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Event_date {
            get {
                return this.Event_dateField;
            }
            set {
                if ((this.Event_dateField.Equals(value) != true)) {
                    this.Event_dateField = value;
                    this.RaisePropertyChanged("Event_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Organizer_name {
            get {
                return this.Organizer_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.Organizer_nameField, value) != true)) {
                    this.Organizer_nameField = value;
                    this.RaisePropertyChanged("Organizer_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Registration_date {
            get {
                return this.Registration_dateField;
            }
            set {
                if ((this.Registration_dateField.Equals(value) != true)) {
                    this.Registration_dateField = value;
                    this.RaisePropertyChanged("Registration_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Strength {
            get {
                return this.StrengthField;
            }
            set {
                if ((this.StrengthField.Equals(value) != true)) {
                    this.StrengthField = value;
                    this.RaisePropertyChanged("Strength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool is_group {
            get {
                return this.is_groupField;
            }
            set {
                if ((this.is_groupField.Equals(value) != true)) {
                    this.is_groupField = value;
                    this.RaisePropertyChanged("is_group");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Show_event", ReplyAction="http://tempuri.org/IService1/Show_eventResponse")]
        WebClient.ServiceReference1.Event Show_event(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Show_event", ReplyAction="http://tempuri.org/IService1/Show_eventResponse")]
        System.Threading.Tasks.Task<WebClient.ServiceReference1.Event> Show_eventAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SaveEvent", ReplyAction="http://tempuri.org/IService1/SaveEventResponse")]
        int SaveEvent(WebClient.ServiceReference1.Event e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SaveEvent", ReplyAction="http://tempuri.org/IService1/SaveEventResponse")]
        System.Threading.Tasks.Task<int> SaveEventAsync(WebClient.ServiceReference1.Event e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateEvent", ReplyAction="http://tempuri.org/IService1/UpdateEventResponse")]
        void UpdateEvent(WebClient.ServiceReference1.Event e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateEvent", ReplyAction="http://tempuri.org/IService1/UpdateEventResponse")]
        System.Threading.Tasks.Task UpdateEventAsync(WebClient.ServiceReference1.Event e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteEvent", ReplyAction="http://tempuri.org/IService1/DeleteEventResponse")]
        string DeleteEvent(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteEvent", ReplyAction="http://tempuri.org/IService1/DeleteEventResponse")]
        System.Threading.Tasks.Task<string> DeleteEventAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Events", ReplyAction="http://tempuri.org/IService1/EventsResponse")]
        System.Data.DataSet Events();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Events", ReplyAction="http://tempuri.org/IService1/EventsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> EventsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WebClient.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WebClient.ServiceReference1.IService1>, WebClient.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebClient.ServiceReference1.Event Show_event(int id) {
            return base.Channel.Show_event(id);
        }
        
        public System.Threading.Tasks.Task<WebClient.ServiceReference1.Event> Show_eventAsync(int id) {
            return base.Channel.Show_eventAsync(id);
        }
        
        public int SaveEvent(WebClient.ServiceReference1.Event e) {
            return base.Channel.SaveEvent(e);
        }
        
        public System.Threading.Tasks.Task<int> SaveEventAsync(WebClient.ServiceReference1.Event e) {
            return base.Channel.SaveEventAsync(e);
        }
        
        public void UpdateEvent(WebClient.ServiceReference1.Event e) {
            base.Channel.UpdateEvent(e);
        }
        
        public System.Threading.Tasks.Task UpdateEventAsync(WebClient.ServiceReference1.Event e) {
            return base.Channel.UpdateEventAsync(e);
        }
        
        public string DeleteEvent(int id) {
            return base.Channel.DeleteEvent(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteEventAsync(int id) {
            return base.Channel.DeleteEventAsync(id);
        }
        
        public System.Data.DataSet Events() {
            return base.Channel.Events();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> EventsAsync() {
            return base.Channel.EventsAsync();
        }
    }
}
